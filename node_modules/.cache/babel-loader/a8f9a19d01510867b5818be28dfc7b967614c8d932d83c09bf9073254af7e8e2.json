{"ast":null,"code":"var _jsxFileName = \"/Users/leo/projects/comp6080-24t1-exam/src/pages/GameTwo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, useMediaQuery, useTheme } from '@mui/material';\nimport { useGamesWon } from '../context/GamesWonContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst characters = ['A', 'B', 'C', 'D'];\nfunction FlashingMemoryGame() {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [userInput, setUserInput] = useState([]);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [showCharacter, setShowCharacter] = useState('');\n  const [gameActive, setGameActive] = useState(false);\n  const {\n    decrementGamesWon\n  } = useGamesWon();\n  const theme = useTheme();\n  const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\n  const isMedium = useMediaQuery(theme.breakpoints.down('lg'));\n  const sidebarWidth = isSmall ? '30px' : isMedium ? '60px' : '100px';\n  useEffect(() => {\n    startGame();\n  }, []);\n  const startGame = () => {\n    setSequence([]);\n    setUserInput([]);\n    setCurrentStep(1);\n    setGameActive(false);\n    runSequence(1);\n  };\n  const runSequence = length => {\n    let newSequence = [];\n    for (let i = 0; i < length; i++) {\n      const randomChar = characters[Math.floor(Math.random() * characters.length)];\n      newSequence.push(randomChar);\n    }\n    setSequence(newSequence);\n    displaySequence(newSequence);\n  };\n  const displaySequence = sequence => {\n    let index = 0;\n    setUserInput([]);\n    setGameActive(true);\n    const interval = setInterval(() => {\n      if (index < sequence.length) {\n        setShowCharacter(sequence[index]);\n        setTimeout(() => setShowCharacter(''), 900);\n        index++;\n      } else {\n        clearInterval(interval);\n        setTimeout(() => setGameActive(false), 1000);\n      }\n    }, 1000);\n  };\n  const handleButtonClick = char => {\n    if (!gameActive) {\n      const newInputs = [...userInput, char];\n      setUserInput(newInputs);\n      if (newInputs.length === sequence.length) {\n        if (newInputs.every((input, index) => input === sequence[index])) {\n          if (sequence.length === 5) {\n            alert('Congratulations, you have won the game!');\n            decrementGamesWon();\n            startGame();\n          } else {\n            setCurrentStep(prev => prev + 1);\n            runSequence(currentStep + 1);\n          }\n        } else {\n          alert('Incorrect sequence, try again!');\n          startGame();\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      marginRight: sidebarWidth\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        display: 'flex'\n      },\n      children: characters.map(char => /*#__PURE__*/_jsxDEV(Button, {\n        disabled: gameActive,\n        onClick: () => handleButtonClick(char),\n        sx: {\n          flex: 1,\n          height: '50%',\n          fontSize: '1.5em',\n          border: '2px solid',\n          borderColor: 'primary.main'\n        },\n        children: char\n      }, char, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '40px',\n          height: '40px',\n          backgroundColor: '#cccccc',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            textAlign: 'center',\n            width: '100%'\n          },\n          children: showCharacter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashingMemoryGame, \"F2hMFgVpQcpBn3t3Nu09Gw1vv6I=\", false, function () {\n  return [useGamesWon, useTheme, useMediaQuery, useMediaQuery];\n});\n_c = FlashingMemoryGame;\nexport default FlashingMemoryGame;\nvar _c;\n$RefreshReg$(_c, \"FlashingMemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","useMediaQuery","useTheme","useGamesWon","jsxDEV","_jsxDEV","characters","FlashingMemoryGame","_s","sequence","setSequence","userInput","setUserInput","currentStep","setCurrentStep","showCharacter","setShowCharacter","gameActive","setGameActive","decrementGamesWon","theme","isSmall","breakpoints","down","isMedium","sidebarWidth","startGame","runSequence","length","newSequence","i","randomChar","Math","floor","random","push","displaySequence","index","interval","setInterval","setTimeout","clearInterval","handleButtonClick","char","newInputs","every","input","alert","prev","sx","height","display","flexDirection","marginRight","children","flex","map","disabled","onClick","fontSize","border","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","justifyContent","width","backgroundColor","variant","textAlign","_c","$RefreshReg$"],"sources":["/Users/leo/projects/comp6080-24t1-exam/src/pages/GameTwo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, useMediaQuery, useTheme } from '@mui/material';\nimport { useGamesWon } from '../context/GamesWonContext';  \n\nconst characters = ['A', 'B', 'C', 'D'];\n\nfunction FlashingMemoryGame() {\n  const [sequence, setSequence] = useState([]);\n  const [userInput, setUserInput] = useState([]);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [showCharacter, setShowCharacter] = useState('');\n  const [gameActive, setGameActive] = useState(false);\n  const { decrementGamesWon } = useGamesWon();\n  const theme = useTheme();\n  const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\n  const isMedium = useMediaQuery(theme.breakpoints.down('lg'));\n  const sidebarWidth = isSmall ? '30px' : isMedium ? '60px' : '100px';\n\n  useEffect(() => {\n    startGame();\n  }, []);\n\n  const startGame = () => {\n    setSequence([]);\n    setUserInput([]);\n    setCurrentStep(1);\n    setGameActive(false);\n    runSequence(1);\n  };\n\n  const runSequence = (length) => {\n    let newSequence = [];\n    for (let i = 0; i < length; i++) {\n      const randomChar = characters[Math.floor(Math.random() * characters.length)];\n      newSequence.push(randomChar);\n    }\n    setSequence(newSequence);\n    displaySequence(newSequence);\n  };\n\n  const displaySequence = (sequence) => {\n    let index = 0;\n    setUserInput([]);\n    setGameActive(true);\n    const interval = setInterval(() => {\n      if (index < sequence.length) {\n        setShowCharacter(sequence[index]);\n        setTimeout(() => setShowCharacter(''), 900);\n        index++;\n      } else {\n        clearInterval(interval);\n        setTimeout(() => setGameActive(false), 1000);\n      }\n    }, 1000);\n  };\n\n  const handleButtonClick = (char) => {\n    if (!gameActive) {\n      const newInputs = [...userInput, char];\n      setUserInput(newInputs);\n      if (newInputs.length === sequence.length) {\n        if (newInputs.every((input, index) => input === sequence[index])) {\n          if (sequence.length === 5) {\n            alert('Congratulations, you have won the game!');\n            decrementGamesWon();\n            startGame();\n          } else {\n            setCurrentStep(prev => prev + 1);\n            runSequence(currentStep + 1);\n          }\n        } else {\n          alert('Incorrect sequence, try again!');\n          startGame();\n        }\n      }\n    }\n  };\n\n  return (\n    <Box sx={{\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      marginRight: sidebarWidth, \n    }}>\n      <Box sx={{ flex: 1, display: 'flex' }}>\n        {characters.map((char) => (\n          <Button key={char} disabled={gameActive} onClick={() => handleButtonClick(char)} sx={{ flex: 1, height: '50%', fontSize: '1.5em', border: '2px solid', borderColor: 'primary.main' }}>\n            {char}\n          </Button>\n        ))}\n      </Box>\n      <Box sx={{ flex: 1, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <Box sx={{ width: '40px', height: '40px', backgroundColor: '#cccccc', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Typography variant=\"h6\" sx={{ textAlign: 'center', width: '100%' }}>{showCharacter}</Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default FlashingMemoryGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}