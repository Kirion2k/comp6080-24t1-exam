{"ast":null,"code":"var _jsxFileName = \"/Users/leo/6080/exam/src/context/GamesWonContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamesWonContext = /*#__PURE__*/createContext();\nexport const useGamesWon = () => {\n  _s();\n  return useContext(GamesWonContext);\n};\n_s(useGamesWon, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const GamesWonProvider = ({\n  children\n}) => {\n  _s2();\n  const [gamesWon, setGamesWon] = useState(2);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const fetchInitialScore = async () => {\n      const storedWins = localStorage.getItem('gamesWon');\n      if (storedWins !== null) {\n        setGamesWon(parseInt(storedWins, 10));\n      } else {\n        try {\n          const response = await fetch('https://cgi.cse.unsw.edu.au/~cs6080/raw/data/score.json');\n          const data = await response.json();\n          localStorage.setItem('gamesWon', data.score);\n          setGamesWon(data.score);\n        } catch (error) {\n          console.error(\"Failed to fetch initial games count\", error);\n        }\n      }\n    };\n    fetchInitialScore();\n  }, []);\n  useEffect(() => {\n    if (gamesWon === 0) {\n      if (location.pathname === '/home') {\n        alert('Congratulations!');\n        resetGamesWon();\n      }\n    }\n  }, [gamesWon, location.pathname]);\n  const decrementGamesWon = () => {\n    const newWins = Math.max(0, gamesWon - 1);\n    localStorage.setItem('gamesWon', newWins);\n    setGamesWon(newWins);\n  };\n  const resetGamesWon = async () => {\n    try {\n      const response = await fetch('https://cgi.cse.unsw.edu.au/~cs6080/raw/data/score.json');\n      const data = await response.json();\n      localStorage.setItem('gamesWon', data.score);\n      setGamesWon(data.score);\n    } catch (error) {\n      console.error(\"Failed to reset games count\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GamesWonContext.Provider, {\n    value: {\n      gamesWon,\n      decrementGamesWon,\n      resetGamesWon\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s2(GamesWonProvider, \"NYRXIHVcFnWHyv3yRTSGzPQbsTI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = GamesWonProvider;\nvar _c;\n$RefreshReg$(_c, \"GamesWonProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","GamesWonContext","useGamesWon","_s","GamesWonProvider","children","_s2","gamesWon","setGamesWon","navigate","location","fetchInitialScore","storedWins","localStorage","getItem","parseInt","response","fetch","data","json","setItem","score","error","console","pathname","alert","resetGamesWon","decrementGamesWon","newWins","Math","max","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leo/6080/exam/src/context/GamesWonContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom'; \nconst GamesWonContext = createContext();\n\nexport const useGamesWon = () => useContext(GamesWonContext);\n\nexport const GamesWonProvider = ({ children }) => {\n  const [gamesWon, setGamesWon] = useState(2);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchInitialScore = async () => {\n      const storedWins = localStorage.getItem('gamesWon');\n      if (storedWins !== null) {\n        setGamesWon(parseInt(storedWins, 10));\n      } else {\n        try {\n          const response = await fetch('https://cgi.cse.unsw.edu.au/~cs6080/raw/data/score.json');\n          const data = await response.json();\n          localStorage.setItem('gamesWon', data.score);\n          setGamesWon(data.score);\n        } catch (error) {\n          console.error(\"Failed to fetch initial games count\", error);\n        }\n      }\n    };\n\n    fetchInitialScore();\n  }, []);\n\n  useEffect(() => {\n    if (gamesWon === 0) {\n      if (location.pathname === '/home') {\n        alert('Congratulations!');\n        resetGamesWon(); \n      }\n    }\n  }, [gamesWon, location.pathname]); \n\n  const decrementGamesWon = () => {\n    const newWins = Math.max(0, gamesWon - 1);\n    localStorage.setItem('gamesWon', newWins);\n    setGamesWon(newWins);\n  };\n\n  const resetGamesWon = async () => {\n    try {\n      const response = await fetch('https://cgi.cse.unsw.edu.au/~cs6080/raw/data/score.json');\n      const data = await response.json();\n      localStorage.setItem('gamesWon', data.score);\n      setGamesWon(data.score);\n    } catch (error) {\n      console.error(\"Failed to reset games count\", error);\n    }\n  };\n\n  return (\n    <GamesWonContext.Provider value={{ gamesWon, decrementGamesWon, resetGamesWon }}>\n      {children}\n    </GamesWonContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}